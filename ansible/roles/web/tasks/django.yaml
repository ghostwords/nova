---

- name: Get timestamp
  local_action: shell date +%s%3N
  register: timestamp
  run_once: True
  become: False

# TODO look at how heroku has you manage production credentials
- name: Create release archive
  local_action: command
    zip --filesync -R ../ansible/nova.zip '*' -x '*.swp' -x '*__pycache__*'
    chdir=../django
  become: False

- name: Create release directory
  file: path={{ release_dir }} state=directory

- name: Upload and unpack release archive
  unarchive: src=nova.zip dest={{ release_dir }}

# TODO unnecessary? http://docs.ansible.com/ansible/pip_module.html
- name: Create the virtualenv
  command: virtualenv {{ virtualenv_dir }} --no-site-packages -p /usr/bin/python3
    creates={{ virtualenv_dir }}/bin/activate

# TODO use virtualenvwrapper to cache packages to save bandwidth
- name: Install packages from requirements.txt
  pip:
    virtualenv: "{{ virtualenv_dir }}"
    requirements: "{{ release_dir }}/requirements.txt"

# TODO factor out django app name
- name: Create Django environment config
  template: src=.env.j2 dest={{ release_dir }}/nova/.env

# TODO
#- name: Run Django database migrations
#  django_manage:
#    command: migrate
#    app_path: "{{ release_dir }}"
#    virtualenv: "{{ virtualenv_dir }}"
#    settings: "{{ django_settings_file }}"
#  environment: django_environment
#  when: run_django_db_migrations is defined and run_django_db_migrations
#  tags: django.migrate

- name: Run django-admin collectstatic
  django_manage:
    command: collectstatic
    app_path: "{{ release_dir }}"
    virtualenv: "{{ virtualenv_dir }}"

- name: Run django-admin compress
  django_manage:
    command: compress
    app_path: "{{ release_dir }}"
    virtualenv: "{{ virtualenv_dir }}"

- name: Update app version
  file:
    state: link
    src: "{{ release_dir }}"
    path: /var/www/{{ domain }}/current
  # TODO need to restart ... when to restart and when to reload?
  notify:
    - reload Nginx
    - restart uWSGI
    - restart Memcached

# TODO clean up old deploys
